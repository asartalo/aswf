parameters:
  application.config.file: ''
  application.path: ''

  request.response.class: Asar\Http\Message\Response
  request.resourceDispatcher.class: Asar\Http\Resource\Dispatcher
  request.page.class: Asar\Content\Page
  request.page.template: '' # loaded by template finder
  request.route.class: Asar\Routing\Route

  application.class: Asar\Application\Application
  application.router.class: Asar\Routing\Router
  application.routeNodes.class: Asar\Routing\Node
  application.nodeNavigator.class: Asar\Routing\NodeNavigator
  application.resourceFactory.class: Asar\Http\Resource\ResourceFactory
  application.resourceResolver.class: Asar\Http\Resource\ResourceResolver
  application.templateAssembler.class: Asar\Template\TemplateAssembler
  application.templateEngineRegistry.class: Asar\Template\Engine\EngineRegistry
  application.dispatchEntry.class: Asar\Application\DispatchEntry
  application.templateEngineRegistryHelper.class: Asar\Template\Engine\RegistryHelper

  asar.config.yamlImporter.class: Asar\Config\YamlImporter
  asar.config.config.class: Asar\Config\Config
  asar.filesystem.utility.class: Asar\FileSystem\Utility
  asar.routing.nodesBuilder.class: Asar\Routing\NodeTreeBuilder
  asar.templateEngine.php.class: Asar\Template\Engine\PhpEngine
  asar.responseExporter.class: Asar\Http\Message\ResponseExporter
  asar.requestFactory.class: Asar\Http\Message\RequestFactory

  asar.resource.generic.notfound.class: Asar\Http\Resource\Generic\NotFound


services:
  yaml.parser:
    class: Symfony\Component\Yaml\Parser

  asar.config.yamlImporter:
    class: %asar.config.yamlImporter.class%
    arguments: [@yaml.parser]

  asar.routing.nodesBuilder:
    class: %asar.routing.nodesBuilder.class%

  asar.filesystem.utility:
    class: %asar.filesystem.utility.class%

  asar.templateEngine.php:
    class: %asar.templateEngine.php.class%

  asar.resource.generic.notfound:
    class: %asar.resource.generic.notfound.class%

  asar.config.default:
    class: %asar.config.config.class%
    arguments:
      - @asar.config.default.path
      - importers: [@asar.config.yamlImporter]

  asar.config.default.path:
    factory_service: asar.framework.utility
    factory_method: getResourcePath
    arguments:
      - 'config.default.yml'

  asar.responseExporter:
    class: %asar.responseExporter.class%

  asar.requestFactory:
    class: %asar.requestFactory.class%


  application:
    class: %application.class%
    scope: application
    arguments: [@application.dispatchEntry]

  application.dispatchEntry:
    class: %application.dispatchEntry.class%
    scope: application
    arguments: [@service_container]

  application.config:
    class: %asar.config.config.class%
    scope: application
    arguments:
      - %application.config.file%
      - importers: [@asar.config.yamlImporter]
        extends: @asar.config.default

  application.routes:
    scope: application
    factory_service: application.config
    factory_method: get
    arguments: ['routes']

  application.routeNodes:
    class: %application.routeNodes.class%
    scope: application
    factory_service:  asar.routing.nodesBuilder
    factory_method:   build
    arguments: [@application.routes]

  application.nodeNavigator:
    class: %application.nodeNavigator.class%
    scope: application
    arguments:
      - @application.routeNodes

  application.router:
    class: %application.router.class%
    scope: application
    arguments:
      - @application.nodeNavigator

  application.resourceResolver:
    class: %application.resourceResolver.class%
    scope: application
    arguments:
      - %application.path%
      - @application.config

  application.resourceFactory:
    class: %application.resourceFactory.class%
    scope: application
    arguments:
      - @service_container
      - @application.resourceResolver

  application.templateAssembler:
    class: %application.templateAssembler.class%
    scope: application
    arguments:
      - %application.path%
      - @application.templateEngineRegistry
      - @asar.filesystem.utility

  application.templateEngineRegistry.pristine:
    class: %application.templateEngineRegistry.class%
    scope: application

  application.templateEngineRegistry:
    scope: application
    factory_service: application.templateEngineRegistryHelper
    factory_method: registerEngines
    arguments:
      - @application.template.enginesList

  application.template.enginesList:
    scope: application
    factory_service: application.config
    factory_method: get
    arguments:
      - template.engines

  application.templateEngineRegistryHelper:
    scope: application
    class: %application.templateEngineRegistryHelper.class%
    arguments:
      - @application.templateEngineRegistry.pristine
      - @service_container

  request.resource:
    scope: request
    factory_service: application.resourceFactory
    factory_method: getResource
    arguments:
      - @request.route

  request.resource.default:
    class: %request.resource.class%
    scope: request
    arguments:
      - @request.page

  request.resourceClass:
    scope: request
    factory_service: application.resourceResolver
    factory_method: getResourceClassName
    arguments:
      - @request.route

  request.response:
    class: %request.response.class%
    scope: request
    factory_service: request.resourceDispatcher
    factory_method: handleRequest
    arguments: [@request.request]

  request.resourceDispatcher:
    class: %request.resourceDispatcher.class%
    arguments: [@request.resource]

  request.route:
    class: %request.route.class%
    scope: request
    factory_service: application.router
    factory_method: route
    arguments:
      - @request.path

  request.path:
    scope: request
    factory_service: request.request
    factory_method: getPath

  request.page:
    class: %request.page.class%
    scope: request
    arguments:
      - @application.templateAssembler
      - @request.route
      - @request.request

